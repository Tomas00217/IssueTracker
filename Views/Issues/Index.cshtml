@model PaginatedList<IssueTracker.Models.Issue>
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor httpContextAccessor;

@{
    ViewData["Title"] = "Issues";
    var prevDisabled = !Model.PreviousPage ? "disabled" : "";
    var nextDisabled = !Model.NextPage ? "disabled" : "";    
}

@functions {

    public int getUserId()
    {
        return @httpContextAccessor?.HttpContext?.Session.GetInt32("UserId") ?? -1;
    }
    
    public Boolean canDelete(int creatorId, int assigneeId)
    {
        int userId = getUserId();
        return userId == 1 || userId == creatorId || userId == assigneeId;
    }
}

<a class="h1 text-decoration-none" asp-action="Index" style="color: #1c9954!important">@ViewData["Title"]</a>
<hr/>
<div class="d-flex">
    <form class="d-inline" asp-controller="Issues" asp-action="Index" method="get">
        <div class="d-inline">
            <div class="input-group">
                <input class="form-control" type="text" name="SearchString" placeholder="Name"/>
                <span class="input-group-text p-0">
                    <button type="submit" class="btn btn-link text-decoration-none">
                        <i class="fa fa-search" aria-hidden="true"></i>
                    </button>
                </span>
            </div>
        </div>
    </form>
    <div class="d-inline">
        <a class="btn btn-link text-decoration-none" asp-action="Index" asp-route-sortType="@ViewData["MyIssues"]">My issues</a>
    </div>
    <div class="dropdown d-inline">
      <button class="btn btn-link text-decoration-none dropdown-toggle" type="button" id="StateDropdown" data-bs-toggle="dropdown" aria-expanded="false">
        State
      </button>
      <ul class="dropdown-menu" aria-labelledby="StateDropdown">
        <li><a class="dropdown-item" asp-action="Index" asp-route-sortType="@ViewData["State"]" asp-route-state="@IssueStatus.New">New</a></li>
        <li><a class="dropdown-item" asp-action="Index" asp-route-sortType="@ViewData["State"]" asp-route-state="@IssueStatus.Active">Active</a></li>
        <li><a class="dropdown-item" asp-action="Index" asp-route-sortType="@ViewData["State"]" asp-route-state="@IssueStatus.Resolved">Resolved</a></li>
        <li><a class="dropdown-item" asp-action="Index" asp-route-sortType="@ViewData["State"]" asp-route-state="@IssueStatus.Closed">Closed</a></li>
      </ul>
    </div>    
    <div class="dropdown d-inline">
      <button class="btn btn-link text-decoration-none dropdown-toggle" type="button" id="PriorityDropdown" data-bs-toggle="dropdown" aria-expanded="false">
        Priority
      </button>
      <ul class="dropdown-menu" aria-labelledby="PriorityDropdown">
        <li><a class="dropdown-item" asp-action="Index" asp-route-sortType="@ViewData["Priority"]" asp-route-priority="@IssuePriority.High">High</a></li>
        <li><a class="dropdown-item" asp-action="Index" asp-route-sortType="@ViewData["Priority"]" asp-route-priority="@IssuePriority.Medium">Medium</a></li>
        <li><a class="dropdown-item" asp-action="Index" asp-route-sortType="@ViewData["Priority"]" asp-route-priority="@IssuePriority.Low">Low</a></li>
      </ul>
    </div> 
</div>
<hr/>
<table class="table align-middle">
    <thead>
        <tr>
            <th>
                <a class="text-decoration-none text-reset" asp-action="Index" asp-route-sortOrder="@ViewData["SummarySort"]">
                    Name
                    @if (@ViewData["SummarySort"] == "SummaryDesc")
                    {
                        <i class="fa fa-arrow-down"></i>
                    }
                    else
                    {
                       <i class="fa fa-arrow-up"></i>  
                    } 
                </a>    
            </th>
            <th>
                <a class="text-decoration-none text-reset" asp-action="Index" asp-route-sortOrder="@ViewData["ProjectSort"]">
                    Project
                    @if (@ViewData["ProjectSort"] == "ProjectDesc")
                    {
                        <i class="fa fa-arrow-down"></i>
                    }
                    else
                    {
                       <i class="fa fa-arrow-up"></i>  
                    } 
                </a> 
            </th>
            <th>
                <a class="text-decoration-none text-reset" asp-action="Index" asp-route-sortOrder="@ViewData["StateSort"]">
                    State
                    @if (@ViewData["StateSort"] == "StateDesc")
                    {
                        <i class="fa fa-arrow-down"></i>
                    }
                    else
                    {
                       <i class="fa fa-arrow-up"></i>  
                    } 
                </a> 
            </th>
            <th>
                <a class="text-decoration-none text-reset" asp-action="Index" asp-route-sortOrder="@ViewData["PrioritySort"]">
                    Priority
                    @if (@ViewData["PrioritySort"] == "PriorityDesc")
                    {
                        <i class="fa fa-arrow-down"></i>
                    }
                    else
                    {
                       <i class="fa fa-arrow-up"></i>  
                    } 
                </a> 
            </th>
            <th>
                Date due
            </th>
            <th>
                Assignee
            </th>
            <th>
                Creator
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td class="text-break">
                @Html.DisplayFor(modelItem => item.Summary)
            </td>
            <td class="text-break">
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td class="text-break">
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td class="text-break">
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td class="text-break">
                @Html.DisplayFor(modelItem => item.TargetResolutionDate)
            </td>
            <td class="text-break">
            @if (item.Asignee != null)
            {
                <span>@item.Asignee.Email</span>
            }

            </td>
            <td class="text-break">
                @item.Creator.Email
            </td>
            <td class="text-end">
                <a class="btn-primary btn m-1" asp-action="Details" asp-route-id="@item.Id">Details</a>
                @if (canDelete(item.CreatorId, item.AsigneeId))
                {
                    <button type="button" class="btn btn-danger m-1" data-bs-toggle="modal" data-bs-target="#delete" data-bs-issueName="@item.Summary" data-bs-issueId="@item.Id">Delete</button>
                }
                else
                {
                    <span type="button" class="btn btn-danger m-1 opacity-50 disabled">Delete</span>
                }
                <partial name="_DeleteIssueModal"></partial>
            </td>
        </tr>
}
    </tbody>
</table>

<div>  
    
    <a class="btn-primary btn m-1" asp-action="Create">
        Create New Issue
    </a>

    <div class="float-end">
        <a class ="btn-primary btn m-1 @prevDisabled" asp-action="Index" asp-route-PageNumber="@(Model.PageIndex - 1)">
            Previous
        </a>
        | @(Model.PageIndex) | 
        <a class = "btn-primary btn m-1 @nextDisabled" asp-action="Index" asp-route-PageNumber="@(Model.PageIndex + 1)">
            Next
        </a>
    </div>

</div>

<script>
    var exampleModal = document.getElementById('delete')
    exampleModal.addEventListener('show.bs.modal', function (event) {
    var button = event.relatedTarget

    var id = button.getAttribute('data-bs-issueId')
    var name = button.getAttribute('data-bs-issueName')

    var modalBodyInput = exampleModal.querySelector('.iss input')
    var modalBodyParagraph = exampleModal.querySelector('.iss p')
    
    modalBodyParagraph.innerHTML = "Are you sure you want to delete issue: " + name + "?"
    modalBodyInput.value = id
    })
</script>