@model IssueTracker.Models.ProjectDetails;
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor httpContextAccessor;

@{
    ViewData["Title"] = "Details";
}

@functions {
    public int getPeopleCount(int projectId)
    {
        IQueryable<int> projectIds = Model.projectIds;
        return projectIds.Where(id => id == projectId).Count();
    }

    public int getIssueCount(int projectId)
    {
        List<Issue> issues = Model.issues;
        return issues.Where(issue => issue.ProjectId == projectId).Count();
    }

    public int getUserId()
    {
        return @httpContextAccessor?.HttpContext?.Session.GetInt32("UserId") ?? -1;
    }
}

<h1 style="color: #1c9954!important">Details</h1>

<div>
    <h4>@Html.DisplayFor(model => model.Project.Name)</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-3">People working on this project:</dt>
        <dd class = "col-sm-7">@getPeopleCount(@Model.Project.ProjectId)</dd>
        <dd class = "col-sm-2">
            <button type="button" class="btn btn-primary float-end" data-bs-toggle="modal" data-bs-target="#inviteUser">Invite to project</button>
        </dd>
        <dt class = "col-sm-3">Project Lead:</dt>
        <dd class = "col-sm-7">
            @if (Model.projectLead == null)
            {
                <span> Project does not have a project lead </span>
            } else
            {
                @Model.projectLead
            }
        </dd>
        <dd class = "col-sm-2">
            @if (@Model.userRole == ProjectRole.Manager && Model.projectLead == null)
            {
                <button type="button" class="btn btn-primary float-end" data-bs-toggle="modal" data-bs-target="#projectLead">
                    Set Project Lead
                </button>
                <partial name="_SetProjectLeadModal"/>
            }
            else if (@Model.userRole == ProjectRole.Manager && Model.projectLead != null)
            {
                <button type="button" class="btn btn-primary float-end" data-bs-toggle="modal" data-bs-target="#projectLead">
                    Change Project Lead
                </button>
                <partial name="_SetProjectLeadModal" />
            }
        </dd>
        <dt class = "col-sm-3">Number of issues:</dt>
        <dd class = "col-sm-9">@getIssueCount(@Model.Project.ProjectId)</dd>
        <dt class = "col-sm-3">Start date:</dt>
        <dd class = "col-sm-9">@Html.DisplayFor(model => model.Project.StartDate)</dd>
        <dt class = "col-sm-3">Target end date:</dt>
        <dd class = "col-sm-9">@Html.DisplayFor(model => model.Project.TargetEndDate)</dd>
        <dt class = "col-sm-3">Actual end date:</dt>
        <dd class = "col-sm-9">
            @if (Model.Project.ActualEndDate.CompareTo(DateTime.MinValue) == 0)
            {
                <p> Project has not ended </p>
            }
            else
            {
                @Html.DisplayFor(model => model.Project.ActualEndDate)
            }
        </dd>
        <dt class = "col-sm-3">Created On:</dt>
        <dd class = "col-sm-9">@Html.DisplayFor(model => model.Project.CreatedOn)</dd>
    </dl>
</div>
<hr/>
<div class="float-end">
    <a class="btn btn-primary" asp-action="UserList" asp-route-projectId="@Model.Project.ProjectId">
        Show Users
    </a>
    <a class="btn btn-primary" asp-controller="Issues" asp-action="Index" asp-route-projectId="@Model.Project.ProjectId">
        Show Issues
    </a>
</div>

<partial name="_AddToProjectModal"/>
@if (Model.userRole == ProjectRole.Manager || getUserId() == 1)
{
    <p><a class="text-decoration-none" asp-action="Edit" asp-route-id="@Model.Project.ProjectId"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</a></p>
}

<p><a class="text-decoration-none" asp-action="Index"><i class="fa fa-chevron-left" aria-hidden="true"></i> Back to List</a></p>