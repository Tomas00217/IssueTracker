@model PaginatedList<IssueTracker.Models.Project>;
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor httpContextAccessor;

@{
    ViewData["Title"] = "Projects";
    var prevDisabled = !Model.PreviousPage ? "disabled" : "";
    var nextDisabled = !Model.NextPage ? "disabled" : "";   
}

@functions {
    public int getPeopleCount(int projectId)
    {
        IQueryable<int> projectIds = ViewBag.ProjectIds;
        return projectIds.Where(id => id == projectId).Count();
    }

    public int getIssueCount(int projectId)
    {
        List<Issue> issues = ViewBag.Issues;
        return issues.Where(issue => issue.ProjectId == projectId).Count();
    }

    public int getUserId()
    {
        return @httpContextAccessor?.HttpContext?.Session.GetInt32("UserId") ?? -1;
    }

    public Boolean canDelete(int projId)
    {
        var ppIds = ViewBag.CurrUserPP;
        return getUserId() == 1 || ppIds.Contains(projId);
    }
}

<a class="h1 text-decoration-none" asp-action="Index">@ViewData["Title"]</a>
<hr/>
<form asp-controller="Projects" asp-action="Index" method="get">
    <p>
        Name: <input type="text" name="SearchString" />
        <input type="submit" class="btn btn-primary" value="Filter"/>
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a class="text-decoration-none text-reset" asp-action="Index" asp-route-sortOrder="@ViewData["NameSort"]">Name 
                    @if (@ViewData["NameSort"] == "NameDesc")
                    {
                        <i class="fa fa-arrow-down"></i>
                    }
                    else
                    {
                       <i class="fa fa-arrow-up"></i>  
                    }                    
                </a>
            </th>
            <th>
                People
            </th>
            <th>
                Issues
            </th>
            <th>
                <a class="text-decoration-none text-reset" asp-action="Index" asp-route-sortOrder="@ViewData["StartDateSort"]">StartDate
                    @if (@ViewData["StartDateSort"] == "StartDateDesc")
                    {
                        <i class="fa fa-arrow-down"></i>
                    }
                    else
                    {
                       <i class="fa fa-arrow-up"></i>  
                    }      
                </a>
            </th>
            <th>
                <a class="text-decoration-none text-reset" asp-action="Index" asp-route-sortOrder="@ViewData["TargetDateSort"]">EndDate 
                    @if (@ViewData["TargetDateSort"] == "TargetDateDesc")
                    {
                        <i class="fa fa-arrow-down"></i>
                    }
                    else
                    {
                       <i class="fa fa-arrow-up"></i>  
                    }    
                </a>
            </th>
            <th>
                <a class="text-decoration-none text-reset" asp-action="Index" asp-route-sortOrder="@ViewData["StatusSort"]">Status 
                    @if (@ViewData["StatusSort"] == "StatusDesc")
                    {
                        <i class="fa fa-arrow-down"></i>
                    }
                    else
                    {
                       <i class="fa fa-arrow-up"></i>  
                    }    
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @getPeopleCount(item.ProjectId)
            </td>
            <td>
                @getIssueCount(item.ProjectId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TargetEndDate)
            </td>
            <td>
                @if (item.ActualEndDate.CompareTo(DateTime.MinValue) == 0)
                {
                    if ((item.TargetEndDate).CompareTo(DateTime.Now) < 0)
                    {
                            <p>Overdue</p>
                    }
                    else
                    {
                        <p>In Progress</p>
                    }
                }
                else
                {
                    <p>Done</p>
                }
            </td>
            <td class="text-end">
                <a type="button" class="btn btn-primary" asp-action="Details" asp-route-id="@item.ProjectId" asp-route-userId="@getUserId()">Details</a> |
                @if (canDelete(item.ProjectId)) {
                    <button type="button" class="btn btn-danger m-1" data-bs-toggle="modal" data-bs-target="#delete" data-bs-projName="@item.Name" data-bs-projId="@item.ProjectId">Delete</button>
                } else {
                    <span type="button" class="btn btn-danger m-1 opacity-50 disabled">Delete</span>
                }
                <partial name="_DeleteProjectModal"></partial>
            </td>
        </tr> 
        }     
    </tbody>
</table>

<div>
    <a class="btn btn-primary m-1" asp-action="Create">
        Create new project
    </a>

    <div class="float-end">
        <a class ="btn-primary btn m-1 @prevDisabled" asp-action="Index" asp-route-PageNumber="@(Model.PageIndex - 1)">
            Previous
        </a>
        | @(Model.PageIndex) | 
        <a class = "btn-primary btn m-1 @nextDisabled" asp-action="Index" asp-route-PageNumber="@(Model.PageIndex + 1)">
            Next
        </a> 
    </div>

</div>


<script>
    var exampleModal = document.getElementById('delete')
    exampleModal.addEventListener('show.bs.modal', function (event) {
    var button = event.relatedTarget

    var id = button.getAttribute('data-bs-projId')
    var name = button.getAttribute('data-bs-projName')

    var modalBodyInput = exampleModal.querySelector('.proj input')
    var modalBodyParagraph = exampleModal.querySelector('.proj p')
    
    modalBodyParagraph.innerHTML = "Are you sure you want to delete project: " + name + "?"
    modalBodyInput.value = id
    })
</script>